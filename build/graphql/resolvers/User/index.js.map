{"version":3,"sources":["../../../../src/graphql/resolvers/User/index.js"],"names":["Query","user","root","args","Promise","resolve","reject","User","findOne","exec","err","res","users","find","populate","Mutation","addUser","id","name","email","newUser","save","editUser","findOneAndUpdate","$set","deleteUser","findOneAndRemove"],"mappings":";;;;;;;AAKA;;;;AALA;;;AAIA;eAGe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE,cAACC,IAAD,EAAOC,IAAP,EAAgB;AAClB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,uBAAKC,OAAL,CAAaL,IAAb,EAAmBM,IAAnB,CAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KAPE;AAQHC,IAAAA,KAAK,EAAE,iBAAM;AACT,aAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,uBAAKM,IAAL,CAAU,EAAV,EACKC,QADL,GAEKL,IAFL,CAEU,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChBD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAJL;AAKH,OANM,CAAP;AAOH;AAhBE,GADI;AAmBXI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,iBAACd,IAAD,QAA6B;AAAA,UAArBe,EAAqB,QAArBA,EAAqB;AAAA,UAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,UAAXC,KAAW,QAAXA,KAAW;AAClC,UAAMC,OAAO,GAAG,IAAIb,cAAJ,CAAS;AAACU,QAAAA,EAAE,EAAFA,EAAD;AAAKC,QAAAA,IAAI,EAAJA,IAAL;AAAWC,QAAAA,KAAK,EAALA;AAAX,OAAT,CAAhB;AAEA,aAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCc,QAAAA,OAAO,CAACC,IAAR,CAAa,UAACX,GAAD,EAAMC,GAAN,EAAc;AACvBD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH,KATK;AAUNW,IAAAA,QAAQ,EAAE,kBAACpB,IAAD,SAA6B;AAAA,UAArBe,EAAqB,SAArBA,EAAqB;AAAA,UAAjBC,IAAiB,SAAjBA,IAAiB;AAAA,UAAXC,KAAW,SAAXA,KAAW;AACnC,aAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,uBAAKgB,gBAAL,CAAsB;AAACN,UAAAA,EAAE,EAAFA;AAAD,SAAtB,EAA4B;AAACO,UAAAA,IAAI,EAAE;AAACN,YAAAA,IAAI,EAAJA,IAAD;AAAOC,YAAAA,KAAK,EAALA;AAAP;AAAP,SAA5B,EAAmDV,IAAnD,CACI,UAACC,GAAD,EAAMC,GAAN,EAAc;AACVD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAHL;AAKH,OANM,CAAP;AAOH,KAlBK;AAmBNc,IAAAA,UAAU,EAAE,oBAACvB,IAAD,EAAOC,IAAP,EAAgB;AACxB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,uBAAKmB,gBAAL,CAAsBvB,IAAtB,EAA4BM,IAA5B,CAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3CD,UAAAA,GAAG,GAAGJ,MAAM,CAACI,GAAD,CAAT,GAAiBL,OAAO,CAACM,GAAD,CAA3B;AACH,SAFD;AAGH,OAJM,CAAP;AAKH;AAzBK;AAnBC,C","sourcesContent":["/**\n * Created by alexanderpetrov on 24.03.19.\n */\n\n// User schema.\nimport User from \"../../../models/Users\";\n\nexport default {\n    Query: {\n        user: (root, args) => {\n            return new Promise((resolve, reject) => {\n                User.findOne(args).exec((err, res) => {\n                    err ? reject(err) : resolve(res);\n                });\n            });\n        },\n        users: () => {\n            return new Promise((resolve, reject) => {\n                User.find({})\n                    .populate()\n                    .exec((err, res) => {\n                        err ? reject(err) : resolve(res);\n                    });\n            });\n        }\n    },\n    Mutation: {\n        addUser: (root, {id, name, email}) => {\n            const newUser = new User({id, name, email});\n\n            return new Promise((resolve, reject) => {\n                newUser.save((err, res) => {\n                    err ? reject(err) : resolve(res);\n                });\n            });\n        },\n        editUser: (root, {id, name, email}) => {\n            return new Promise((resolve, reject) => {\n                User.findOneAndUpdate({id}, {$set: {name, email}}).exec(\n                    (err, res) => {\n                        err ? reject(err) : resolve(res);\n                    }\n                );\n            });\n        },\n        deleteUser: (root, args) => {\n            return new Promise((resolve, reject) => {\n                User.findOneAndRemove(args).exec((err, res) => {\n                    err ? reject(err) : resolve(res);\n                });\n            });\n        }\n    }\n};"],"file":"index.js"}